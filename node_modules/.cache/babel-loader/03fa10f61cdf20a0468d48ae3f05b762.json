{"ast":null,"code":"// import {applyMiddleware,combineReducers,createStore } from \"redux\"\n// import { composeWithDevTools } from \"redux-devtools-extension\"\n// import thunk from \"redux-thunk\"\n// const reducer=combineReducers({});\n// const middleware=[thunk]\n// const store =createStore(\n//     reducer,\n//     {},\n//     composeWithDevTools(...middleware)\n// )\n// export default store;\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { ChangeColorReducer } from \"./Reducers/ColorReducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport { darkModeReducer } from \"./Reducers/DarkModeReducer\";\nimport { userLoginReducer, userRegisterReducer } from \"./Reducers/UserReducer\";\nimport { Cartreducer } from \"./Reducers/CartReducer\";\nconst reducer = combineReducers({\n  colorReducer: ChangeColorReducer,\n  darkMode: darkModeReducer,\n  loginUser: userLoginReducer,\n  registerUser: userRegisterReducer,\n  cart: Cartreducer\n});\nconst userInfoFromLS = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst cartItemsFromLocal = localStorage.getItem(\"cartitems\") ? JSON.parse(localStorage.getItem(\"cartitems\")) : [];\nconst initialState = {\n  loginUser: {\n    userInfo: userInfoFromLS\n  },\n  cart: {\n    cartitems: cartItemsFromLocal\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/Iman/Desktop/udemy-web-master-sonuncu/src/Redux/store.js"],"names":["createStore","combineReducers","applyMiddleware","ChangeColorReducer","composeWithDevTools","thunk","darkModeReducer","userLoginReducer","userRegisterReducer","Cartreducer","reducer","colorReducer","darkMode","loginUser","registerUser","cart","userInfoFromLS","localStorage","getItem","JSON","parse","cartItemsFromLocal","initialState","userInfo","cartitems","middleware","store"],"mappings":"AAAA;AACA;AACA;AAGA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA,SAAQA,WAAR,EAAoBC,eAApB,EAAqCC,eAArC,QAA2D,OAA3D;AACA,SAASC,kBAAT,QAAmC,yBAAnC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,QAAsD,wBAAtD;AACA,SAASC,WAAT,QAA4B,wBAA5B;AAEA,MAAMC,OAAO,GAACT,eAAe,CAAC;AAC1BU,EAAAA,YAAY,EAACR,kBADa;AAE1BS,EAAAA,QAAQ,EAACN,eAFiB;AAG1BO,EAAAA,SAAS,EAACN,gBAHgB;AAI1BO,EAAAA,YAAY,EAACN,mBAJa;AAK1BO,EAAAA,IAAI,EAAEN;AALoB,CAAD,CAA7B;AAOA,MAAMO,cAAc,GAACC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACpBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADoB,GAEnB,IAFF;AAGC,MAAMG,kBAAkB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,WAArB,IAC3BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAD2B,GACmB,EAD9C;AAID,MAAMI,YAAY,GAAC;AACfT,EAAAA,SAAS,EAAC;AACNU,IAAAA,QAAQ,EAACP;AADH,GADK;AAIfD,EAAAA,IAAI,EAAC;AACDS,IAAAA,SAAS,EAACH;AADT;AAJU,CAAnB;AAQA,MAAMI,UAAU,GAAG,CAACpB,KAAD,CAAnB;AAGA,MAAMqB,KAAK,GAAC1B,WAAW,CACnBU,OADmB,EAEnBY,YAFmB,EAGjBlB,mBAAmB,CAACF,eAAe,CAAC,GAAGuB,UAAJ,CAAhB,CAHF,CAAvB;AAMA,eAAeC,KAAf","sourcesContent":["// import {applyMiddleware,combineReducers,createStore } from \"redux\"\n// import { composeWithDevTools } from \"redux-devtools-extension\"\n// import thunk from \"redux-thunk\"\n\n\n// const reducer=combineReducers({});\n\n\n// const middleware=[thunk]\n\n// const store =createStore(\n//     reducer,\n//     {},\n//     composeWithDevTools(...middleware)\n// )\n\n// export default store;\n\n\nimport {createStore,combineReducers, applyMiddleware} from \"redux\";\nimport { ChangeColorReducer } from \"./Reducers/ColorReducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport { darkModeReducer } from \"./Reducers/DarkModeReducer\";\nimport { userLoginReducer, userRegisterReducer } from \"./Reducers/UserReducer\";\nimport { Cartreducer } from \"./Reducers/CartReducer\";\n\nconst reducer=combineReducers({\n    colorReducer:ChangeColorReducer,\n    darkMode:darkModeReducer,\n    loginUser:userLoginReducer,\n    registerUser:userRegisterReducer,\n    cart :Cartreducer\n})\nconst userInfoFromLS=localStorage.getItem(\"userInfo\") ?\n JSON.parse(localStorage.getItem(\"userInfo\"))\n :null\n const cartItemsFromLocal = localStorage.getItem(\"cartitems\" )?\n JSON.parse(localStorage.getItem(\"cartitems\")):[] \n\n\nconst initialState={\n    loginUser:{\n        userInfo:userInfoFromLS\n    },\n    cart:{\n        cartitems:cartItemsFromLocal\n    }\n}\nconst middleware = [thunk];\n\n\nconst store=createStore(\n    reducer,\n    initialState,\n      composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store;"]},"metadata":{},"sourceType":"module"}