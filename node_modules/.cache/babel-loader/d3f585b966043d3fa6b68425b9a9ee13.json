{"ast":null,"code":"import { ADD_TO_CART } from \"../Constants/CartConstans\";\nexport const Cartreducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    cartitems: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TO_CART:\n      const item = action.payload;\n      const exititem = state.cartitems.find(c => c.id == item.id);\n\n      if (exititem) {\n        return { ...state,\n          cartitems: state.cartitems.map(c => c.id === exititem.id ? item : c)\n        };\n      } else {\n        return { ...state,\n          cartitems: [...state.cartitems, item]\n        };\n      }\n\n    case REMOVE_FROM_CART:\n      return { ...state,\n        stat\n      };\n\n    default:\n      return state;\n  }\n};\n_c = Cartreducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cartreducer\");","map":{"version":3,"sources":["C:/Users/Iman/Desktop/udemy-web-master-sonuncu/src/Redux/Reducers/CartReducer.js"],"names":["ADD_TO_CART","Cartreducer","state","cartitems","action","type","item","payload","exititem","find","c","id","map","REMOVE_FROM_CART","stat"],"mappings":"AAAA,SAASA,WAAT,QAA4B,2BAA5B;AAEA,OAAO,MAAMC,WAAW,GAAI,YAA+B;AAAA,MAA9BC,KAA8B,uEAAxB;AAACC,IAAAA,SAAS,EAAC;AAAX,GAAwB;AAAA,MAATC,MAAS;;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKL,WAAL;AACI,YAAMM,IAAI,GAAEF,MAAM,CAACG,OAAnB;AACA,YAAMC,QAAQ,GAAGN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAqBC,CAAC,IAAEA,CAAC,CAACC,EAAF,IAAML,IAAI,CAACK,EAAnC,CAAjB;;AACA,UAAGH,QAAH,EAAY;AACV,eAAM,EACJ,GAAGN,KADC;AAEJC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBS,GAAhB,CAAqBF,CAAD,IAC/BA,CAAC,CAACC,EAAF,KAASH,QAAQ,CAACG,EAAlB,GAAuBL,IAAvB,GAA4BI,CADjB;AAFP,SAAN;AAOD,OARD,MASI;AACA,eAAO,EAAC,GAAGR,KAAJ;AAAUC,UAAAA,SAAS,EAAC,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAoBG,IAApB;AAApB,SAAP;AACH;;AACD,SAAKO,gBAAL;AACA,aAAO,EAAC,GAAGX,KAAJ;AAAUY,QAAAA;AAAV,OAAP;;AAIJ;AACI,aAAOZ,KAAP;AAtBR;AAwBC,CAzBM;KAAMD,W","sourcesContent":["import { ADD_TO_CART } from \"../Constants/CartConstans\";\r\n\r\nexport const Cartreducer  = (state={cartitems:[]},action)=>{\r\nswitch (action.type) {\r\n    case ADD_TO_CART:\r\n        const item =action.payload;\r\n        const exititem = state.cartitems.find(c=>c.id==item.id);                 \r\n        if(exititem){\r\n          return{\r\n            ...state,\r\n            cartitems: state.cartitems.map((c)=>\r\n            c.id === exititem.id ? item:c\r\n            )\r\n\r\n          }\r\n        }\r\n        else{\r\n            return {...state,cartitems:[...state.cartitems,item]}\r\n        }\r\n        case REMOVE_FROM_CART:\r\n        return {...state,stat}\r\n           \r\n           \r\n\r\n    default:\r\n        return state;\r\n}\r\n}"]},"metadata":{},"sourceType":"module"}